!(function (e) {
    "use strict";
    function t() {
        for (
            var e = "",
                t = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz",
                n = 0;
            n < 5;
            n++
        )
            e += t.charAt(Math.floor(Math.random() * t.length));
        return e;
    }
    function n(t, n) {
        let i = t.serializeObject(),
            a = t.attr("action");
        n.addClass("loadingbar gray").prop("disabled", !0),
            t.find("input").removeClass("is-invalid"),
            t.find("textarea").removeClass("is-invalid"),
            e
                .post(a, i, function (e) {
                    e &&
                        200 === e.code &&
                        (Swal.fire({
                            icon: "success",
                            html:
                                '<h3 class="font-20 text-center text-dark-blue py-25">' +
                                saveSuccessLang +
                                "</h3>",
                            showConfirmButton: !1,
                            width: "25rem",
                        }),
                        setTimeout(() => {
                            window.location.reload();
                        }, 500));
                })
                .fail((e) => {
                    n.removeClass("loadingbar gray").prop("disabled", !1);
                    var i = e.responseJSON;
                    i &&
                        "zoom_jwt_token_invalid" === i.status &&
                        Swal.fire({
                            icon: "error",
                            html:
                                '<h3 class="font-20 text-center text-dark-blue py-25">' +
                                zoomJwtTokenInvalid +
                                "</h3>",
                            showConfirmButton: !1,
                            width: "25rem",
                        }),
                        i &&
                            i.errors &&
                            Object.keys(i.errors).forEach((e) => {
                                const n = i.errors[e];
                                let a = t.find('[name="' + e + '"]');
                                "zoom-not-complete-alert" === e
                                    ? t
                                          .find(".js-zoom-not-complete-alert")
                                          .removeClass("d-none")
                                    : (a.addClass("is-invalid"),
                                      a
                                          .parent()
                                          .find(".invalid-feedback")
                                          .text(n[0]));
                            });
                });
    }
    (e.fn.serializeObject = function () {
        var t = {},
            n = this.serializeArray();
        return (
            e.each(n, function () {
                t[this.name]
                    ? (t[this.name].push || (t[this.name] = [t[this.name]]),
                      t[this.name].push(this.value || ""))
                    : (t[this.name] = this.value || "");
            }),
            t
        );
    }),
        e("body").on("click", ".close-swl", function (e) {
            e.preventDefault(), Swal.close();
        }),
        e("#summernote").summernote({
            tabsize: 2,
            height: 400,
            placeholder: e("#summernote").attr("placeholder"),
            dialogsInBody: !0,
            toolbar: [
                ["style", ["style"]],
                ["font", ["bold", "underline", "clear"]],
                ["fontname", ["fontname"]],
                ["color", ["color"]],
                ["para", ["paragraph"]],
                ["table", ["table"]],
                ["insert", ["link", "picture", "video"]],
                ["view", ["fullscreen", "codeview"]],
            ],
        }),
        e("body").on("click", "#saveAndPublish", function (t) {
            t.preventDefault(),
                e("#forDraft").val("publish"),
                e("#webinarForm").trigger("submit");
        }),
        e("body").on("click", "#saveAsDraft", function (t) {
            t.preventDefault(),
                e("#forDraft").val(1),
                e("#webinarForm").trigger("submit");
        }),
        e("body").on("click", "#saveReject", function (t) {
            t.preventDefault(),
                e("#forDraft").val("reject"),
                e("#webinarForm").trigger("submit");
        }),
        e("#partnerInstructorSwitch").on(
            "change.bootstrapSwitch",
            function (t) {
                t.target.checked
                    ? (e("#partnerInstructorInput").removeClass("d-none"),
                      resetSelect2())
                    : e("#partnerInstructorInput").addClass("d-none");
            }
        ),
        e("body").on("change", "#categories", function (t) {
            t.preventDefault();
            let n = this.value;
            e.get("/admin/filters/get-by-category-id/" + n, function (t) {
                if (t && void 0 !== t.filters && t.filters.length) {
                    let n = "";
                    Object.keys(t.filters).forEach((e) => {
                        let i = t.filters[e],
                            a = [];
                        i.options.length && (a = i.options),
                            (n +=
                                '<div class="col-12 col-md-3">\n<div class="webinar-category-filters">\n<strong class="category-filter-title d-block">' +
                                i.title +
                                '</strong>\n<div class="py-10"></div>\n\n'),
                            a.length &&
                                Object.keys(a).forEach((e) => {
                                    let t = a[e];
                                    n +=
                                        '<div class="form-group mt-20 d-flex align-items-center justify-content-between">\n<label class="" for="filterOption' +
                                        t.id +
                                        '">' +
                                        t.title +
                                        '</label>\n<div class="custom-control custom-checkbox">\n<input type="checkbox" name="filters[]" value="' +
                                        t.id +
                                        '" class="custom-control-input" id="filterOption' +
                                        t.id +
                                        '">\n<label class="custom-control-label" for="filterOption' +
                                        t.id +
                                        '"></label>\n</div>\n</div>\n';
                                }),
                            (n += "</div></div>");
                    }),
                        e("#categoriesFiltersContainer").removeClass("d-none"),
                        e("#categoriesFiltersCard").html(n);
                } else e("#categoriesFiltersContainer").addClass("d-none"), e("#categoriesFiltersCard").html("");
            });
        }),
        e("body").on("click", "#webinarAddTicket", function (t) {
            t.preventDefault();
            let n = '<div id="addTicketModal">';
            (n += e("#webinarTicketModal").html()),
                (n += "</div>"),
                Swal.fire({
                    html: n,
                    showCancelButton: !1,
                    showConfirmButton: !1,
                    customClass: { content: "p-0 text-left" },
                    width: "48rem",
                }),
                resetDatePickers();
        }),
        e("body").on("click", "#saveTicket", function (t) {
            t.preventDefault();
            const i = e(this);
            n(e("#addTicketModal form"), i);
        }),
        e("body").on("click", "#webinarAddSession", function (n) {
            n.preventDefault();
            const i = t(),
                a = e("#webinarSessionModal");
            a.find("input").prop("disabled", !1);
            let o = '<div id="addSessionModal">';
            (o += a.html()),
                (o = (o += "</div>").replaceAll("record", i)),
                Swal.fire({
                    html: o,
                    showCancelButton: !1,
                    showConfirmButton: !1,
                    customClass: { content: "p-0 text-left" },
                    width: "48rem",
                }),
                resetDatePickers();
        }),
        e("body").on("change", ".js-api-input", function (t) {
            t.preventDefault();
            const n = e(this).closest(".session-form"),
                i = this.value;
            n.find(".js-zoom-not-complete-alert").addClass("d-none"),
                "big_blue_button" === i
                    ? (n.find(".js-local-link").addClass("d-none"),
                      n.find(".js-api-secret").removeClass("d-none"),
                      n.find(".js-moderator-secret").removeClass("d-none"))
                    : "zoom" === i
                    ? (n.find(".js-local-link").addClass("d-none"),
                      n.find(".js-api-secret").addClass("d-none"),
                      n.find(".js-moderator-secret").addClass("d-none"))
                    : (n.find(".js-local-link").removeClass("d-none"),
                      n.find(".js-api-secret").removeClass("d-none"),
                      n.find(".js-moderator-secret").addClass("d-none"));
        }),
        e("body").on("click", "#saveSession", function (t) {
            t.preventDefault();
            const i = e(this);
            n(e("#addSessionModal form"), i);
        }),
        e("body").on("click", "#webinarAddFile", function (n) {
            n.preventDefault();
            const i = t();
            let a = '<div id="addFilesModal">';
            (a += e("#webinarFileModal").html()),
                (a = (a = (a += "</div>").replaceAll("str_", "")).replaceAll(
                    "record",
                    i
                )),
                Swal.fire({
                    html: a,
                    showCancelButton: !1,
                    showConfirmButton: !1,
                    customClass: { content: "p-0 text-left" },
                    width: "48rem",
                });
        }),
        e("body").on("click", "#saveFile", function (t) {
            t.preventDefault();
            const i = e(this);
            n(e("#addFilesModal form"), i);
        }),
        e("body").on("click", "#webinarAddPrerequisites", function (t) {
            t.preventDefault();
            let n = '<div id="addPrerequisitesModal">';
            (n += e("#webinarPrerequisitesModal").html()),
                (n = (n = (n += "</div>").replaceAll(
                    "prerequisites-select",
                    "prerequisites-select2"
                )).replaceAll("str_", "")),
                Swal.fire({
                    html: n,
                    showCancelButton: !1,
                    showConfirmButton: !1,
                    customClass: { content: "p-0 text-left" },
                    width: "48rem",
                    onOpen: () => {
                        e(".prerequisites-select2").select2({
                            placeholder: e(this).data("placeholder"),
                            minimumInputLength: 3,
                            allowClear: !0,
                            ajax: {
                                url: "/admin/webinars/search",
                                dataType: "json",
                                type: "POST",
                                quietMillis: 50,
                                data: function (t) {
                                    return {
                                        term: t.term,
                                        webinar_id: e(this).data("webinar-id"),
                                    };
                                },
                                processResults: function (t) {
                                    return {
                                        results: e.map(t, function (e) {
                                            return { text: e.title, id: e.id };
                                        }),
                                    };
                                },
                            },
                        });
                    },
                });
        }),
        e("body").on("click", "#savePrerequisites", function (t) {
            t.preventDefault();
            const i = e(this);
            n(e("#addPrerequisitesModal form"), i);
        }),
        e("body").on("click", "#webinarAddFAQ", function (t) {
            t.preventDefault();
            let n = '<div id="addFAQsModal">';
            (n += e("#webinarFaqModal").html()),
                (n += "</div>"),
                Swal.fire({
                    html: n,
                    showCancelButton: !1,
                    showConfirmButton: !1,
                    customClass: { content: "p-0 text-left" },
                    width: "48rem",
                });
        }),
        e("body").on("click", "#saveFAQ", function (t) {
            t.preventDefault();
            const i = e(this);
            n(e("#addFAQsModal form"), i);
        }),
        e("body").on("click", "#webinarAddQuiz", function (t) {
            t.preventDefault();
            let n = '<div id="addQuizModal">';
            (n += e("#quizzesModal").html()),
                (n = (n += "</div>").replaceAll(
                    "quiz-select2",
                    "quiz-select22"
                )),
                Swal.fire({
                    html: n,
                    showCancelButton: !1,
                    showConfirmButton: !1,
                    customClass: { content: "p-0 text-left" },
                    width: "30rem",
                    onOpen: () => {
                        e(".quiz-select22").select2({
                            placeholder: e(this).data("placeholder"),
                            allowClear: !0,
                            width: "100%",
                        });
                    },
                });
        }),
        e("body").on("click", "#saveQuiz", function (t) {
            t.preventDefault();
            const i = e(this);
            n(e("#addQuizModal form"), i);
        }),
        e("body").on("click", ".edit-ticket", function (t) {
            t.preventDefault();
            const n = e(this),
                i = n.attr("data-ticket-id"),
                a = n.attr("data-webinar-id");
            loadingSwl();
            const o = { item_id: a };
            e.post("/admin/tickets/" + i + "/edit", o, function (t) {
                if (t && t.ticket) {
                    const n = t.ticket;
                    let a = '<div id="addTicketModal">';
                    (a += e("#webinarTicketModal").html()),
                        (a = (a += "</div>").replaceAll(
                            "/admin/tickets/store",
                            "/admin/tickets/" + i + "/update"
                        )),
                        Swal.fire({
                            html: a,
                            showCancelButton: !1,
                            showConfirmButton: !1,
                            customClass: { content: "p-0 text-left" },
                            width: "48rem",
                            onOpen: () => {
                                e(".date-range-picker").daterangepicker({
                                    locale: { format: "YYYY-MM-DD" },
                                    drops: "down",
                                    opens: "right",
                                    startDate: moment(
                                        1e3 * n.start_date
                                    ).toDate(),
                                    endDate: moment(1e3 * n.end_date).toDate(),
                                }),
                                    delete n.start_date,
                                    delete n.end_date,
                                    Object.keys(n).forEach((t) => {
                                        e("#addTicketModal")
                                            .find('[name="' + t + '"]')
                                            .val(n[t]);
                                    });
                            },
                        });
                }
            });
        }),
        e("body").on("click", ".edit-session", function (n) {
            n.preventDefault();
            const i = e(this),
                a = i.attr("data-session-id"),
                o = i.attr("data-webinar-id");
            loadingSwl();
            const s = { item_id: o };
            e.post("/admin/sessions/" + a + "/edit", s, function (n) {
                if (n && n.session) {
                    const i = n.session;
                    let o = '<div id="addSessionModal">';
                    (o += e("#webinarSessionModal").html()),
                        (o = (o += "</div>").replaceAll(
                            "/admin/sessions/store",
                            "/admin/sessions/" + a + "/update"
                        ));
                    const s = t();
                    (o = o.replaceAll("record", s)),
                        Swal.fire({
                            html: o,
                            showCancelButton: !1,
                            showConfirmButton: !1,
                            customClass: { content: "p-0 text-left" },
                            width: "48rem",
                            onOpen: () => {
                                var t = e("#addSessionModal");
                                e(".datetimepicker").daterangepicker({
                                    locale: { format: "YYYY-MM-DD HH:mm" },
                                    singleDatePicker: !0,
                                    timePicker: !0,
                                    timePicker24Hour: !0,
                                    startDate: moment(1e3 * i.date).toDate(),
                                }),
                                    delete i.date,
                                    Object.keys(i).forEach((e) => {
                                        "session_api" === e
                                            ? (t
                                                  .find(
                                                      '.js-api-input[value="' +
                                                          i[e] +
                                                          '"]'
                                                  )
                                                  .prop("checked", !0),
                                              "local" !== i[e] &&
                                                  (t
                                                      .find(".js-api-input")
                                                      .prop("disabled", !0),
                                                  t
                                                      .find(
                                                          ".js-ajax-api_secret"
                                                      )
                                                      .prop("disabled", !0),
                                                  t
                                                      .find(".js-ajax-date")
                                                      .prop("disabled", !0),
                                                  t
                                                      .find(".js-ajax-duration")
                                                      .prop("disabled", !0),
                                                  t
                                                      .find(".js-ajax-link")
                                                      .prop("disabled", !0)),
                                              "big_blue_button" === i[e] &&
                                                  (t
                                                      .find(
                                                          ".js-moderator-secret"
                                                      )
                                                      .removeClass("d-none"),
                                                  t
                                                      .find(
                                                          ".js-ajax-moderator_secret"
                                                      )
                                                      .prop("disabled", !0)),
                                              "zoom" === i[e] &&
                                                  (t
                                                      .find(".js-local-link")
                                                      .addClass("d-none"),
                                                  t
                                                      .find(".js-api-secret")
                                                      .addClass("d-none"),
                                                  t
                                                      .find(
                                                          ".js-moderator-secret"
                                                      )
                                                      .addClass("d-none")))
                                            : t
                                                  .find('[name="' + e + '"]')
                                                  .val(i[e]);
                                    });
                            },
                        });
                }
            });
        }),
        e("body").on("click", ".edit-file", function (t) {
            t.preventDefault();
            const n = e(this),
                i = n.attr("data-file-id"),
                a = n.attr("data-webinar-id");
            loadingSwl();
            const o = { item_id: a };
            e.post("/admin/files/" + i + "/edit", o, function (t) {
                if (t && t.file) {
                    const n = t.file;
                    let a = '<div id="addFilesModal">';
                    (a += e("#webinarFileModal").html()),
                        (a = (a = (a += "</div>").replaceAll(
                            "/admin/files/store",
                            "/admin/files/" + i + "/update"
                        )).replaceAll("str_", "")),
                        Swal.fire({
                            html: a,
                            showCancelButton: !1,
                            showConfirmButton: !1,
                            customClass: { content: "p-0 text-left" },
                            width: "48rem",
                            onOpen: () => {
                                var t = e("#addFilesModal");
                                Object.keys(n).forEach((e) => {
                                    "storage" === e &&
                                        ("online" === n[e]
                                            ? (t
                                                  .find(".local-input")
                                                  .addClass("d-none"),
                                              t
                                                  .find(".online-inputs")
                                                  .removeClass("d-none"),
                                              t
                                                  .find(".js-downloadable-file")
                                                  .addClass("d-none"),
                                              t
                                                  .find(
                                                      ".js-downloadable-file input"
                                                  )
                                                  .prop("checked", !1))
                                            : (t
                                                  .find(".local-input")
                                                  .removeClass("d-none"),
                                              t
                                                  .find(".online-inputs")
                                                  .addClass("d-none"),
                                              t
                                                  .find(".js-downloadable-file")
                                                  .removeClass("d-none"),
                                              t
                                                  .find(
                                                      ".js-downloadable-file input"
                                                  )
                                                  .prop("checked", !0))),
                                        t.find('[name="' + e + '"]').val(n[e]);
                                });
                            },
                        });
                }
            });
        }),
        e("body").on("click", ".edit-prerequisite", function (t) {
            t.preventDefault();
            const n = e(this),
                i = n.attr("data-prerequisite-id"),
                a = n.attr("data-webinar-id");
            loadingSwl();
            const o = { item_id: a };
            e.post("/admin/prerequisites/" + i + "/edit", o, function (t) {
                if (t && t.prerequisite) {
                    const n = t.prerequisite;
                    let a = '<div id="addPrerequisitesModal">';
                    (a += e("#webinarPrerequisitesModal").html()),
                        (a = (a = (a = (a += "</div>").replaceAll(
                            "prerequisites-select",
                            "prerequisites-select2"
                        )).replaceAll(
                            "/admin/prerequisites/store",
                            "/admin/prerequisites/" + i + "/update"
                        )).replaceAll("str_", "")),
                        Swal.fire({
                            html: a,
                            showCancelButton: !1,
                            showConfirmButton: !1,
                            customClass: { content: "p-0 text-left" },
                            width: "48rem",
                            onOpen: () => {
                                e(".prerequisites-select2").append(
                                    '<option selected="selected" value="' +
                                        n.webinar_id +
                                        '">' +
                                        n.webinar_title +
                                        "</option>"
                                ),
                                    1 === n.required &&
                                        e("#addPrerequisitesModal")
                                            .find('[name="required"]')
                                            .prop("checked", !0),
                                    e(".prerequisites-select2").select2({
                                        placeholder:
                                            e(this).data("placeholder"),
                                        minimumInputLength: 3,
                                        allowClear: !0,
                                        ajax: {
                                            url: "/admin/webinars/search",
                                            dataType: "json",
                                            type: "POST",
                                            quietMillis: 50,
                                            data: function (t) {
                                                return {
                                                    term: t.term,
                                                    webinar_id:
                                                        e(this).data(
                                                            "webinar-id"
                                                        ),
                                                };
                                            },
                                            processResults: function (t) {
                                                return {
                                                    results: e.map(
                                                        t,
                                                        function (e) {
                                                            return {
                                                                text: e.title,
                                                                id: e.id,
                                                            };
                                                        }
                                                    ),
                                                };
                                            },
                                        },
                                    });
                            },
                        });
                }
            });
        }),
        e("body").on("click", ".edit-faq", function (t) {
            t.preventDefault();
            const n = e(this),
                i = n.attr("data-faq-id"),
                a = n.attr("data-webinar-id");
            loadingSwl();
            const o = { item_id: a };
            e.post("/admin/faqs/" + i + "/edit", o, function (t) {
                if (t && t.faq) {
                    const n = t.faq;
                    let a = '<div id="addFAQsModal">';
                    (a += e("#webinarFaqModal").html()),
                        (a = (a += "</div>").replaceAll(
                            "/admin/faqs/store",
                            "/admin/faqs/" + i + "/update"
                        )),
                        Swal.fire({
                            html: a,
                            showCancelButton: !1,
                            showConfirmButton: !1,
                            customClass: { content: "p-0 text-left" },
                            width: "48rem",
                            onOpen: () => {
                                Object.keys(n).forEach((t) => {
                                    e("#addFAQsModal")
                                        .find('[name="' + t + '"]')
                                        .val(n[t]);
                                });
                            },
                        });
                }
            });
        }),
        e("body").on("click", ".edit-webinar-quiz", function (t) {
            t.preventDefault();
            const n = e(this),
                i = n.attr("data-webinar-quiz-id"),
                a = n.attr("data-webinar-id");
            loadingSwl();
            const o = { item_id: a };
            e.post("/admin/webinar-quiz/" + i + "/edit", o, function (t) {
                if (t && t.webinarQuiz) {
                    const n = t.webinarQuiz;
                    let a = '<div id="addQuizModal">';
                    (a += e("#quizzesModal").html()),
                        (a = (a = (a += "</div>").replaceAll(
                            "/admin/webinar-quiz/store",
                            "/admin/webinar-quiz/" + i + "/update"
                        )).replaceAll("quiz-select2", "quiz-select22")),
                        Swal.fire({
                            html: a,
                            showCancelButton: !1,
                            showConfirmButton: !1,
                            customClass: { content: "p-0 text-left" },
                            width: "30rem",
                            onOpen: () => {
                                e(".quiz-select22").append(
                                    '<option selected="selected" value="' +
                                        n.id +
                                        '">' +
                                        n.title +
                                        "</option>"
                                ),
                                    e(".quiz-select22").select2({
                                        placeholder:
                                            e(this).data("placeholder"),
                                        allowClear: !0,
                                        width: "100%",
                                    });
                            },
                        });
                }
            });
        }),
        e("body").on("change", ".js-file-storage", function (t) {
            t.preventDefault();
            const n = this.value,
                i = e(this).closest("form");
            "online" === n
                ? (i.find(".local-input").addClass("d-none"),
                  i.find(".local-input input").val(""),
                  i.find(".online-inputs").removeClass("d-none"),
                  i.find(".js-downloadable-file").addClass("d-none"))
                : (i.find(".local-input input").val(""),
                  i.find(".local-input").removeClass("d-none"),
                  i.find(".online-inputs").addClass("d-none"),
                  i.find(".js-downloadable-file").removeClass("d-none"));
        }),
        e("body").on("click", "#webinarAddTestLesson", function (n) {
            n.preventDefault();
            const i = t();
            let a = '<div id="addTestLessonModal">';
            (a += e("#webinarTestLessonModal").html()),
                (a = (a = (a += "</div>").replaceAll("record", i)).replaceAll(
                    "attachments-select2",
                    "attachments-select2-" + i
                )),
                Swal.fire({
                    html: a,
                    showCancelButton: !1,
                    showConfirmButton: !1,
                    customClass: { content: "p-0 text-left" },
                    width: "48rem",
                    onOpen: () => {
                        e(".attachments-select2-" + i).select2({
                            multiple: !0,
                            width: "100%",
                        });
                        var t = e("#addTestLessonModal"),
                            n = t.find(".js-content-summernote");
                        n.length &&
                            n.summernote({
                                tabsize: 2,
                                height: 400,
                                callbacks: {
                                    onChange: function (e, n) {
                                        t.find(
                                            ".js-hidden-content-summernote"
                                        ).val(e);
                                    },
                                },
                            });
                    },
                });
        }),
        e("body").on("click", "#saveTestLesson", function (t) {
            t.preventDefault();
            const i = e(this);
            n(e("#addTestLessonModal form"), i);
        }),
        e("body").on("click", ".edit-test-lesson", function (n) {
            n.preventDefault();
            const i = e(this),
                a = i.attr("data-text-id"),
                o = i.attr("data-webinar-id");
            loadingSwl();
            const s = { item_id: o };
            e.post("/admin/test-lesson/" + a + "/edit", s, function (n) {
                if (n && n.testLesson) {
                    const i = n.testLesson,
                        o = t();
                    let s = '<div id="addTestLessonModal">';
                    (s += e("#webinarTestLessonModal").html()),
                        (s = (s = (s = (s = (s += "</div>").replaceAll(
                            "record",
                            o
                        )).replaceAll(
                            "/admin/test-lesson/store",
                            "/admin/test-lesson/" + a + "/update"
                        )).replaceAll("str_", "")).replaceAll(
                            "attachments-select2",
                            "attachments-select2-" + o
                        )),
                        Swal.fire({
                            html: s,
                            showCancelButton: !1,
                            showConfirmButton: !1,
                            customClass: { content: "p-0 text-left" },
                            width: "48rem",
                            onOpen: () => {
                                var t = e("#addTestLessonModal");
                                let n = [];
                                Object.keys(i).forEach((e) => {
                                    "attachments" === e
                                        ? i[e] &&
                                          i[e].length &&
                                          Object.keys(i[e]).forEach((t) => {
                                              var a = i[e][t];
                                              a && n.push(a.file_id);
                                          })
                                        : t
                                              .find('[name="' + e + '"]')
                                              .val(i[e]);
                                }),
                                    e(".attachments-select2-" + o).select2({
                                        multiple: !0,
                                        width: "100%",
                                    }),
                                    e(".attachments-select2-" + o)
                                        .val(n)
                                        .change();
                                var a = t.find(".js-content-summernote");
                                a.length &&
                                    (a.val(i.content),
                                    a.summernote({
                                        tabsize: 2,
                                        height: 400,
                                        callbacks: {
                                            onChange: function (e, n) {
                                                t.find(
                                                    ".js-hidden-content-summernote"
                                                ).val(e);
                                            },
                                        },
                                    }));
                            },
                        });
                }
            });
        }),
        e("body").on("change", 'select[name="type"]', function () {
            const t = ["capacity", "start_date"];
            let n = !0;
            "webinar" !== this.value && (n = !1);
            for (let i of t)
                n
                    ? e(".js-" + i).removeClass("d-none")
                    : e(".js-" + i).addClass("d-none");
        });
})(jQuery);
